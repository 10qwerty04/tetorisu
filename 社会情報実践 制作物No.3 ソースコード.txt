import tkinter as tk
from tkinter import messagebox
import time
import random
root = tk.Tk()
root.title('テトリス')
root.geometry("600x700")
canvas = tk.Canvas(root,width=1000,height=1000)
canvas.pack()

rist = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

times=0

canvas.create_rectangle(40,8,340,610,fill="Black")

canvas.create_line(40,40,340,40,fill="White", width =3)
canvas.create_line(40,70,340,70,fill="White", width =3)
canvas.create_line(40,100,340,100,fill="White", width =3)
canvas.create_line(40,130,340,130,fill="White", width =3)
canvas.create_line(40,160,340,160,fill="White", width =3)
canvas.create_line(40,190,340,190,fill="White", width =3)
canvas.create_line(40,220,340,220,fill="White", width =3)
canvas.create_line(40,250,340,250,fill="White", width =3)
canvas.create_line(40,280,340,280,fill="White", width =3)
canvas.create_line(40,310,340,310,fill="White", width =3)
canvas.create_line(40,340,340,340,fill="White", width =3)
canvas.create_line(40,370,340,370,fill="White", width =3)
canvas.create_line(40,400,340,400,fill="White", width =3)
canvas.create_line(40,430,340,430,fill="White", width =3)
canvas.create_line(40,460,340,460,fill="White", width =3)
canvas.create_line(40,490,340,490,fill="White", width =3)
canvas.create_line(40,520,340,520,fill="White", width =3)
canvas.create_line(40,550,340,550,fill="White", width =3)
canvas.create_line(40,580,340,580,fill="White", width =3)

canvas.create_line(70,8,70,610,fill="White", width =3)
canvas.create_line(100,8,100,610,fill="White", width =3)
canvas.create_line(130,8,130,610,fill="White", width =3)
canvas.create_line(160,8,160,610,fill="White", width =3)
canvas.create_line(190,8,190,610,fill="White", width =3)
canvas.create_line(220,8,220,610,fill="White", width =3)
canvas.create_line(250,8,250,610,fill="White", width =3)
canvas.create_line(280,8,280,610,fill="White", width =3)
canvas.create_line(310,8,310,610,fill="White", width =3)

canvas.create_line(40,8,40,612,fill="Black", width =5)
canvas.create_line(40,10,340,10,fill="Black", width =5)
canvas.create_line(40,610,340,610,fill="Black", width =5)
canvas.create_line(340,8,340,612,fill="Black", width =5)

def randoms():
    R = [0,1,2,3,4,5,6,7,8,9]
    RAND =[1,2,3,4,5,6,7]
    a = random.sample(RAND,1)

def disp():
    for i in range(200):
        print(rist[i],end='')
        if i%10 == 9:
            print()

def sky(times):
    S = [1,1,1,1]
    s=0
    RS = [0,1,2,3,4,5,6]
    s = random.sample(RS,1)
    while times == 0 or times%20 != 0:
        for i in s:
            i = times + i
            rist[i+9*times] = S[0]
            rist[i+1+9*times] = S[1]
            rist[i+2+9*times] = S[2]
            rist[i+3+9*times] = S[3]
            canvas.create_rectangle(41+30*(i-times),12+30*(times),68+30*(i-times),38+30*(times),fill="skyblue",tag='del')
            canvas.create_rectangle(41+30*(i-times+1),12+30*(times),68+30*(i-times+1),38+30*(times),fill="skyblue",tag='del')
            canvas.create_rectangle(41+30*(i-times+2),12+30*(times),68+30*(i-times+2),38+30*(times),fill="skyblue",tag='del')
            canvas.create_rectangle(41+30*(i-times+3),12+30*(times),68+30*(i-times+3),38+30*(times),fill="skyblue",tag='del')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            times = times+1
            if times < 20:
                canvas.delete("del")
                rist[i+9*(times-1)] = 0
                rist[i+1+9*(times-1)] = 0
                rist[i+2+9*(times-1)] = 0
                rist[i+3+9*(times-1)] = 0
            elif times == 20:
                print('sky')
                disp()
                break

def yellow(times):
    Y = [1,1,1,1]
    y=0
    RY = [0,1,2,3,4,5,6,7,8]
    y = random.sample(RY,1)
    while times == 0 or times%20 != 0:
        for q in y:
            q = times + q
            rist[q+9*times] = Y[0]
            rist[q+1+9*times] = Y[1]
            rist[q+10+9*times] = Y[2]
            rist[q+11+9*times] = Y[3]
            canvas.create_rectangle(41+30*(q-times+0),12+30*(times),68+30*(q-times+0),38+30*(times),fill="yellow",tag='del1')
            canvas.create_rectangle(41+30*(q-times+1),12+30*(times),68+30*(q-times+1),38+30*(times),fill="yellow",tag='del1')
            canvas.create_rectangle(41+30*(q-times+0),42+30*(times),68+30*(q-times+0),68+30*(times),fill="yellow",tag='del1')
            canvas.create_rectangle(41+30*(q-times+1),42+30*(times),68+30*(q-times+1),68+30*(times),fill="yellow",tag='del1')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            times=times+1
            if times < 19:
                canvas.delete("del1")
                rist[q+9*(times-1)] = 0
                rist[q+1+9*(times-1)] = 0
                rist[q+10+9*(times-1)] = 0
                rist[q+11+9*(times-1)] = 0
            elif times == 19:
                times = 21
                print('yellow')
                break
        if times == 21:
            times = -1
            disp()
            break
                
def purple(times):
    P = [1,1,1,1]
    p=0
    RP = [1,2,3,4,5,6,7,8]
    p = random.sample(RP,1)
    while times == 0 or times%20 != 0:
        for w in p:
            w = times + w
            rist[w+9*times] = P[0]
            rist[w+9+9*times] = P[1]
            rist[w+10+9*times] = P[2]
            rist[w+11+9*times] = P[3]
            canvas.create_rectangle(41+30*(w-times+0),12+30*(times),68+30*(w-times+0),38+30*(times),fill="purple",tag='del2')
            canvas.create_rectangle(41+30*(w-times-1),42+30*(times),68+30*(w-times-1),68+30*(times),fill="purple",tag='del2')
            canvas.create_rectangle(41+30*(w-times+0),42+30*(times),68+30*(w-times+0),68+30*(times),fill="purple",tag='del2')
            canvas.create_rectangle(41+30*(w-times+1),42+30*(times),68+30*(w-times+1),68+30*(times),fill="purple",tag='del2')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            times=times+1
            if times < 19:
                canvas.delete("del2")
                rist[w+9*(times-1)] = 0
                rist[w+9+9*(times-1)] = 0
                rist[w+10+9*(times-1)] = 0
                rist[w+11+9*(times-1)] = 0
            if times == 19:
                times = 21
                print('purple')
                break
        if times == 21:
            times = -1
            disp()
            break
                
def blue(times):
    B = [1,1,1,1]
    b=0
    RB = [0,1,2,3,4,5,6,7]    
    b = random.sample(RB,1)
    while times == 0 or times%20 != 0:
        for x in b:
            x = times + x
            rist[x+9*times] = B[0]
            rist[x+10+9*times] = B[1]
            rist[x+11+9*times] = B[2]
            rist[x+12+9*times] = B[3]
            canvas.create_rectangle(41+30*(x-times+0),12+30*(times),68+30*(x-times+0),38+30*(times),fill="blue",tag='del3')
            canvas.create_rectangle(41+30*(x-times+0),42+30*(times),68+30*(x-times+0),68+30*(times),fill="blue",tag='del3')
            canvas.create_rectangle(41+30*(x-times+1),42+30*(times),68+30*(x-times+1),68+30*(times),fill="blue",tag='del3')
            canvas.create_rectangle(41+30*(x-times+2),42+30*(times),68+30*(x-times+2),68+30*(times),fill="blue",tag='del3')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            times=times+1
            if times < 19:
                canvas.delete("del3")
                rist[x+9*(times-1)] = 0
                rist[x+10+9*(times-1)] = 0
                rist[x+11+9*(times-1)] = 0
                rist[x+12+9*(times-1)] = 0
            elif times == 19:
                times = 21
                print('blue')
                break
        if times == 21:
            times = -1
            disp()
            break
                
def orange(times):
    O = [1,1,1,1]
    o=0
    RO = [2,3,4,5,6,7,8,9]
    o = random.sample(RO,1)
    while times == 0 or times%20 != 0:
        for l in o:
            l = times + l
            rist[l+9*times] = O[0]
            rist[l+8+9*times] = O[1]
            rist[l+9+9*times] = O[2]
            rist[l+10+9*times] = O[3]
            canvas.create_rectangle(41+30*(l-times+0),12+30*(times),68+30*(l-times+0),38+30*(times),fill="orange",tag='del4')
            canvas.create_rectangle(41+30*(l-times-2),42+30*(times),68+30*(l-times-2),68+30*(times),fill="orange",tag='del4')
            canvas.create_rectangle(41+30*(l-times-1),42+30*(times),68+30*(l-times-1),68+30*(times),fill="orange",tag='del4')
            canvas.create_rectangle(41+30*(l-times-0),42+30*(times),68+30*(l-times-0),68+30*(times),fill="orange",tag='del4')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            times=times+1
            if times < 19:
                canvas.delete("del4")
                rist[l+9*(times-1)] = 0
                rist[l+8+9*(times-1)] = 0
                rist[l+9+9*(times-1)] = 0
                rist[l+10+9*(times-1)] = 0
            if times == 19:
                times = 21
                print('orange')
                break
        if times == 21:
            times = -1
            disp()
            break
                
def red(times):
    R = [1,1,1,1]
    r=0
    RR = [0,1,2,3,4,5,6,7]
    r = random.sample(RR,1)
    while times == 0 or times%20 != 0:
        for v in r:
            v = times + v
            rist[v+9*times] = R[0]
            rist[v+1+9*times] = R[1]
            rist[v+11+9*times] = R[2]
            rist[v+12+9*times] = R[3]
            canvas.create_rectangle(41+30*(v-times+0),12+30*(times),68+30*(v-times+0),38+30*(times),fill="red",tag='del5')
            canvas.create_rectangle(41+30*(v-times+1),12+30*(times),68+30*(v-times+1),38+30*(times),fill="red",tag='del5')
            canvas.create_rectangle(41+30*(v-times+1),42+30*(times),68+30*(v-times+1),68+30*(times),fill="red",tag='del5')
            canvas.create_rectangle(41+30*(v-times+2),42+30*(times),68+30*(v-times+2),68+30*(times),fill="red",tag='del5')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            times=times+1
            if times < 19:
                canvas.delete("del5")
                rist[v+9*(times-1)] = 0
                rist[v+1+9*(times-1)] = 0
                rist[v+11+9*(times-1)] = 0
                rist[v+12+9*(times-1)] = 0
            elif times == 19:
                times = 21
                print('red')
                break
        if times == 21:
            times = -1
            disp()
            break
                
def green(times):
    G = [1,1,1,1]
    g=0
    RG = [1,2,3,4,5,6,7,8]
    g = random.sample(RG,1)
    while times == 0 or times%20 != 0:
        for d in g:
            d = times + d
            rist[d+9*times] = G[0]
            rist[d+1+9*times] = G[1]
            rist[d+9+9*times] = G[2]
            rist[d+10+9*times] = G[3]
            canvas.create_rectangle(41+30*(d-times+0),12+30*(times),68+30*(d-times+0),38+30*(times),fill="green",tag='del6')
            canvas.create_rectangle(41+30*(d-times+1),12+30*(times),68+30*(d-times+1),38+30*(times),fill="green",tag='del6')
            canvas.create_rectangle(41+30*(d-times-1),42+30*(times),68+30*(d-times-1),68+30*(times),fill="green",tag='del6')
            canvas.create_rectangle(41+30*(d-times+0),42+30*(times),68+30*(d-times+0),68+30*(times),fill="green",tag='del6')
            if times < 10:
                time.sleep(0.5)
            time.sleep(1)
            root.update()
            print(times)
            times=times+1
            if times < 19:
                canvas.delete("del6")
                rist[d+9*(times-1)] = 0
                rist[d+1+9*(times-1)] = 0
                rist[d+9+9*(times-1)] = 0
                rist[d+10+9*(times-1)] = 0
            elif times == 19:
                times = 21
                print('green')
                break
        if times == 21:
            times = -1
            disp()
            break

def ran():
    RAND =[1,2,3,4,5,6,7]
    a = random.sample(RAND,1)
    if a[0] == 1:
        sky(times)
    elif a[0] == 2:
        yellow(times)
    elif a[0] == 3:
        purple(times)
    elif a[0] == 4:
        blue(times)
    elif a[0] == 5:
        orange(times)
    elif a[0] == 6:
        red(times)
    elif a[0] == 7:
        green(times)

                
button_1 = tk.Button(root,text="  →  ",relief='flat',font=("5"),fg='white',bg="black",state=tk.NORMAL,width=5,height=1)
button_2 = tk.Button(root,text="  ←  ",relief='flat',font=("5"),fg='white',bg="black",state=tk.NORMAL,width=5,height=1)
button_3 = tk.Button(root,text="  ⤵  ",relief='flat',font=("5"),fg='white',bg="black",state=tk.NORMAL,width=5,height=1)
button_4 = tk.Button(root,text="  ⤴  ",relief='flat',font=("5"),fg='white',bg="black",state=tk.NORMAL,width=5,height=1)
ristst=[0,0,0,0]

cnt=0

def b_1(event):
    global cnt
    cnt += 1
    if cnt == 9:
        cnt = 0
    ristst[0]= cnt
def b_2(event):
    global cnt
    cnt += 1
    if cnt == 9:
        cnt = 0
    ristst[1]= cnt
def b_3(event):
    global cnt
    cnt += 1
    if cnt == 4:
        cnt = 0
    ristst[2]= cnt
def b_4(event):
    global cnt
    cnt += 1
    if cnt == 4:
        cnt = 0
    ristst[3]= cnt

button_1.bind("<Button-1>",b_1)
button_2.bind("<Button-1>",b_2)
button_3.bind("<Button-1>",b_3)
button_4.bind("<Button-1>",b_4)

button_1.place(x=470,y=200)
button_2.place(x=390,y=200)
button_3.place(x=430,y=160)
button_4.place(x=430,y=240)

while times < 100:
    randoms()
    while times<19:
        ran()
        if times == 20:
            times = 0
            break
    if time == 90:
        break

root.mainloop()